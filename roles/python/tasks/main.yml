- name: "python3 build requirements"
  become: true
  ansible.builtin.package:
    name:
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - curl
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
      - python3-pip
    state: latest

- name: "install pyenv"
  ansible.builtin.shell:
    cmd: curl "https://pyenv.run" | bash
    creates: "{{ pyenv_root }}"
  environment:
    PYENV_ROOT: "{{ pyenv_root }}"

- name: "pyenv bash config"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/bash/100.pyenv.sh"
    content: |
      export PYENV_ROOT="{{ pyenv_root }}"
      path_prepend PATH "{{ pyenv_root }}/bin"
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"

- name: "install poetry"
  ansible.builtin.shell:
    cmd: curl -sSL https://install.python-poetry.org | python3
    creates: "{{ poetry_root }}"
  environment:
    POETRY_HOME: "{{ poetry_root }}"

- name: "put poetry on PATH"
  ansible.builtin.file:
    src: "{{ poetry_root }}/bin/poetry"
    dest: "{{ ansible_user_dir }}/.local/bin/poetry"
    state: link

- name: "poetry bash completions"
  ansible.builtin.shell:
    cmd: poetry completions bash >> {{ xdg_data_home }}/bash-completion/completions/poetry
    creates: "{{ xdg_data_home }}/bash-completion/completions/poetry"

- name: "Look up latest python version in major version 3"
  ansible.builtin.command: pyenv latest 3
  register: py_latest
  changed_when: false

- name: "Ensure python {{ py_latest.stdout }} is installed"
  ansible.builtin.command:
    cmd: "{{ pyenv_root}}/bin/pyenv install {{ py_latest.stdout }}"
    creates: "{{ pyenv_root }}/versions/{{ py_latest.stdout }}"

- name: "Create python language server virtualenv"
  ansible.builtin.shell:
    cmd: |
      source "{{ xdg_config_home }}/bash/100.pyenv.sh"
      pyenv virtualenv {{ py_latest.stdout }} language-server
    creates: "{{ pyenv_root }}/versions/language-server"

- name: "Ensure python-language-server and plugins are installed in language-server virtualenv"
  ansible.builtin.shell:
    cmd: |
      source "{{ xdg_config_home }}/bash/100.pyenv.sh"
      pyenv activate language-server
      pip --require-virtualenv --no-input install python-lsp-server pylsp-mypy pyls-isort python-lsp-black python-lsp-ruff pylsp-rope
    executable: /bin/bash
  register: pylsp_install
  changed_when: pylsp_install is search("Installing")

