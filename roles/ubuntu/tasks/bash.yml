- name: "~/.config/bash/"
  ansible.builtin.file:
    path: "{{ xdg_config_home }}/bash"
    state: directory
    recurse: true

- name: "bashrc skel"
  ansible.builtin.file:
    path: "{{ xdg_config_home }}/bash/000.skel.sh"
    src: /etc/skel/.bashrc
    state: link

- name: "~/.bashrc"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.bashrc"
    force: true
    content: |
      for f in ~/.config/bash/*.sh; do
        source "$f"
      done

- name: "bashrc pathutil"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/bash/010.pathutil.sh"
    content: |
      path_prepend() {
        local aux=":${!1}:"
        aux=${aux//:$2:/:}; aux=${aux#:}; aux=${aux%:}
        printf -v "$1" '%s' "${2}${aux:+:}${aux}"
      }

      path_append() {
        local aux=":${!1}:"
        aux=${aux//:$2:/:}; aux=${aux#:}; aux=${aux%:}
        printf -v "$1" '%s' "${aux}${aux:+:}${2}"
      }

      path_remove() {
        local aux=":${!1}:"
        aux=${aux//:$2:/:}; aux=${aux#:}; aux=${aux%:}
        printf -v "$1" '%s' "$aux"
      }

- name: "bashrc path"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/bash/020.path.sh"
    content: |
      path_prepend PATH "{{ ansible_user_dir }}/.local/bin"

- name: "bashrc history"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/bash/100.history.sh"
    content: |
      shopt -s histappend
      export HISTCONTROL=ignoreboth:erasedups
      export HISTSIZE=10000
      export HISTIGNORE="clear:cd:cd -:cd ..:exit:date:w:* --help:"
      export HISTFILE="${XDG_CACHE_HOME:-"$HOME/.cache"}/bash_history"

- name: "readline config dir"
  ansible.builtin.file:
    path: "{{ xdg_config_home }}/readline/"
    state: directory

- name: "readline inputrc"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/readline/inputrc"
    content: |
      $include /etc/inputrc
      "\e[A": history-search-backward
      "\e[B": history-search-forward
      set enable-bracketed-paste on

- name: "readline bashrc"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/bash/100.readline.sh"
    content: |
      export INPUTRC="${XDG_CONFIG_HOME:-"$HOME/.config"}"/readline/inputrc

- name: "xdg env"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/bash/080.xdg.sh"
    content: |
      export XDG_CONFIG_HOME="$HOME/.config"
      export XDG_CACHE_HOME="$HOME/.cache"
      export XDG_STATE_HOME="$HOME/.local/state"
      export XDG_DATA_HOME="$HOME/.local/share"

- name: "xdg desktop dirs"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/user-dirs.dirs"
    content: |
      XDG_DESKTOP_DIR="$HOME/"
      XDG_DOWNLOAD_DIR="$HOME/"
      XDG_TEMPLATES_DIR="$HOME/"
      XDG_PUBLICSHARE_DIR="$HOME/"
      XDG_DOCUMENTS_DIR="$HOME/"
      XDG_MUSIC_DIR="$HOME/"
      XDG_PICTURES_DIR="$HOME/"
      XDG_VIDEOS_DIR="$HOME/"

- name: "gnupg bashrc"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/bash/100.gnupg.sh"
    content: |
      export GNUPGHOME="${XDG_DATA_HOME:-"$HOME/.local/share"}/gnupg"

- name: "create GNUPGHOME"
  ansible.builtin.file:
    path: "{{ xdg_data_home }}/gnupg"
    state: directory

- name: "wget bashrc"
  ansible.builtin.copy:
    dest: "{{ xdg_config_home }}/bash/100.wget.sh"
    content: |
      export WGETRC="${XDG_CONFIG_HOME:-"$HOME/.config"}/wgetrc"

- name: "wget hsts config"
  ansible.builtin.lineinfile:
    create: true
    line: "hsts-file = {{ xdg_cache_home }}/wget-hsts"
    path: "{{ xdg_config_home }}/wgetrc"

- name: "toggle light/dark script"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.local/bin/"
    src: toggle-light-dark
